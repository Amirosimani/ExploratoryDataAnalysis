install.packages("xlsx")
require(xlsx)
table1 <- read.xlsx("myfile.xlsx", sheetName = "Sheet1")
setwd("D:/Google Drive/Courses_G/1B_Exploratory Data Analysis and Visualization/edav_project1")
require(xlsx)
table1 <- read.xlsx("myfile.xlsx", sheetName = "Sheet1")
table1 <- read.xlsx("Survey+Response.xlsx", sheetName = "Sheet1")
table1 <- read.xlsx("Survey+Response.xlsx")
table1 <- read.xlsx("Survey+Response.xlsx", sheetName = "Form response")
table1 <- read.xlsx("Survey+Response.xlsx", sheetName = "Form Responses 1")
View(table1)
strsplit(table1, split)
strsplit(table1[,1], split)
class(table1[1])
class(table1[,1])
table1 <- read.xlsx("Survey+Response.xlsx", sheetName = "Form Responses 1")
table1$Experiences.with.tools[1]
class(table1$Experiences.with.tools[1])
table1$Experiences.with.tools[1][1]
table1$Experiences.with.tools[1][1][1]
strsplit(table1$Experiences.with.tools, ",")
strsplit(as.character(table1$Experiences.with.tools), ",")
strsplit(as.character(table1$Experiences.with.tools), ", ")
a <- strsplit(as.character(table1$Experiences.with.tools), ", ")
skill_list = strsplit(as.character(table1$Experiences.with.tools), ", ")
nrow(skill_list)
length(skill_list)
skill_set_name <- vector(mode="string", length=0)
skill_set_name <- vector(mode="character", length=0)
append(skill_set_name,1)
skill_set_name <- vector(mode="character", length=0)
append(skill_set_name,1)
skill_set_name
skill_set_name = append(skill_set_name,1)
skill_set_name["1"]
skill_set_name = append(skill_set_name,1)
skill_set_name["1"]
for (i in 1:length(skill_list)) {
for (j in 1:length(skill_list[[i]])){
if !(skill_list[[i]][j] in skill_name){
skill_name = append(skill_name,1)
}
table1$skill_list[[i]][j] = 1
}
}
skill_name <- vector(mode="character", length=0)
for (i in 1:length(skill_list)) {
for (j in 1:length(skill_list[[i]])){
if !(skill_list[[i]][j] in skill_name){
skill_name = append(skill_name,1)
}
table1$skill_list[[i]][j] = 1
}
}
for (i in 1:length(skill_list)) {
for (j in 1:length(skill_list[[i]])){
if (!(skill_list[[i]][j] in skill_name)){
skill_name = append(skill_name,1)
}
table1$skill_list[[i]][j] = 1
}
}
skill_name <- vector(mode="character", length=0)
for (i in 1:length(skill_list)) {
for (j in 1:length(skill_list[[i]])){
if !is.element(skill_list[[i]][j], skill_name) {
skill_name = append(skill_name,1)
}
table1$skill_list[[i]][j] = 1
}
}
i = 1
j =1
is.element(skill_list[[i]][j], skill_name)
!is.element(skill_list[[i]][j], skill_name)
for (i in 1:length(skill_list)) {
for (j in 1:length(skill_list[[i]])){
if (!is.element(skill_list[[i]][j], skill_name)) {
skill_name = append(skill_name,skill_list[[i]][j])
}
table1$skill_list[[i]][j] = 1
}
}
table1$skill_list[[i]]
View(table1)
for (i in 1:length(skill_list)) {
for (j in 1:length(skill_list[[i]])){
if (!is.element(skill_list[[i]][j], skill_name)) {
skill_name = append(skill_name,skill_list[[i]][j])
table1$skill_list[[i]] = 0
}
table1$skill_list[[i]][j] = 1
}
}
skill_list[[i]]
skill_list[[i]][j]
table1 <- read.xlsx("Survey+Response.xlsx", sheetName = "Form Responses 1")
skill_list <- strsplit(as.character(table1$Experiences.with.tools), ", ")
skill_name <- vector(mode="character", length=0)
for (i in 1:length(skill_list)) {
for (j in 1:length(skill_list[[i]])){
if (!is.element(skill_list[[i]][j], skill_name)) {
skill_name = append(skill_name,skill_list[[i]][j])
table1$skill_list[[i]][j] = 0
}
table1$skill_list[[i]][j] = 1
}
}
sample_index =1
length(skill_list[[sample_index]])
skill_name <- vector(mode="character", length=0)
for (sample_index in 1:rnow(table1)) {
for (skill in skill_list[[sample_index]]) {
if (!is.element(skill, skill_name)) {
skill_name = append(skill_name,skill)
table1$skill = 0
}
table1$skill[sample_index] = 1
}
}
}
skill_name <- vector(mode="character", length=0)
for (sample_index in 1:nrow(table1)) {
for (skill in skill_list[[sample_index]]) {
if (!is.element(skill, skill_name)) {
skill_name = append(skill_name,skill)
table1$skill = 0
}
table1$skill[sample_index] = 1
}
}
}
skill_name <- vector(mode="character", length=0)
for (sample_index in 1:nrow(table1)) {
for (skill in skill_list[[sample_index]]) {
if (!is.element(skill, skill_name)) {
skill_name = append(skill_name,skill)
table1$skill = 0
}
table1$skill[sample_index] = 1
}
}
View(table1)
table1 <- read.xlsx("Survey+Response.xlsx", sheetName = "Form Responses 1")
skill_list <- strsplit(as.character(table1$Experiences.with.tools), ", ")
skill_name <- vector(mode="character", length=0)
for (sample_index in 1:nrow(table1)) {
for (skill in skill_list[[sample_index]]) {
if (!is.element(skill, skill_name)) {
skill_name = append(skill_name,skill)
table1[,skill] = 0
}
table1$skill[sample_index] = 1
}
}
View(table1)
table1 <- read.xlsx("Survey+Response.xlsx", sheetName = "Form Responses 1")
skill_name <- vector(mode="character", length=0)
for (sample_index in 1:nrow(table1)) {
for (skill in skill_list[[sample_index]]) {
if (!is.element(skill, skill_name)) {
skill_name = append(skill_name,skill)
table1[,skill] = 0
}
table1[sample_index,skill] = 1
}
}
View(table1)
sum(table1$R)
length(skill_name)
pie(What.is.your.preferred.gender.pronoun.  )
pie($What.is.your.preferred.gender.pronoun.  )
pie(table1$What.is.your.preferred.gender.pronoun.  )
library(ggplot2)
tables1$gender <- factor(tables1$What.is.your.preferred.gender.pronoun.,levels=c(1,0,-1),labels=c("she/her","he/him","doesn't matter"))
table1$gender <- factor(table1$What.is.your.preferred.gender.pronoun.,levels=c(1,0,-1),labels=c("she/her","he/him","doesn't matter"))
View(table1)
table1$gender <- factor(table1$What.is.your.preferred.gender.pronoun.,levels=c("she/her","he/him","doesn't matter"), labels=c('Female','Male','Declined to state'))
View(table1)
pie(table1$gender  )
table_raw <- read.xlsx("Survey+Response.xlsx", sheetName = "Form Responses 1")
# Get the skills for each samples.
skill_list <- strsplit(as.character(table_raw$Experiences.with.tools), ", ")
# Create a list for all skill names
skill_name <- vector(mode="character", length=0)
# Create dummies for skills, loop through samples and skills
for (sample_index in 1:nrow(table_raw)) {
for (skill in skill_list[[sample_index]]) {
# append the names, create a new column if it is a new skill
if (!is.element(skill, skill_name)) {
skill_name = append(skill_name,skill)
table[,skill] = 0
}
table[sample_index,skill] = 1
}
}
table$gender <- factor(table_raw$What.is.your.preferred.gender.pronoun.,levels=c("she/her","he/him","doesn't matter"), labels=c('Female','Male','Declined to state'))
table1 <- read.xlsx("Survey+Response.xlsx", sheetName = "Form Responses 1")
# Get the skills for each samples.
skill_list <- strsplit(as.character(table1$Experiences.with.tools), ", ")
# Create a list for all skill names
skill_name <- vector(mode="character", length=0)
# Create dummies for skills, loop through samples and skills
for (sample_index in 1:nrow(table1)) {
for (skill in skill_list[[sample_index]]) {
# append the names, create a new column if it is a new skill
if (!is.element(skill, skill_name)) {
skill_name = append(skill_name,skill)
table1[,skill] = 0
}
table1[sample_index,skill] = 1
}
}
table1$gender <- factor(table1$What.is.your.preferred.gender.pronoun.,levels=c("she/her","he/him","doesn't matter"), labels=c('Female','Male','Declined to state'))
pie(table1$What.is.your.preferred.gender.pronoun.  )
pie(table1$gender )
barplot(table1$gender )
barplot(as.vector(table1$gender) )
barplot(table1$gender=='Female' )
barplot(sum(table1$gender=='Female') )
sum(table1$gender=='Female')
barplot(sum(table1$gender=='Female')) )
table1$gender=='Female'
sum(table1$gender=='Female')
barplot(sum(table1$gender='Female') )
table1$gender=-'Female'
table1$gender=='Female'
sum(table1$gender=='Female')
sum(as.numeric(table1$gender=='Female'))
as.numeric(table1$gender=='Female')
table1$gender <- factor(table1$What.is.your.preferred.gender.pronoun.,levels=c("she/her","he/him",c("doesn't matter","NA")), labels=c('Female','Male','Declined to state'))
table1$gender <- factor(table1$What.is.your.preferred.gender.pronoun.,levels=c("she/her","he/him","doesn't matter","NA"), labels=c('Female','Male','Declined to state','Declined to state'))
barplot(sum(table1$gender=='Female') )
length(skill_name)
sum(as.numeric(table1$gender=='Female'))
View(table1)
table1$gender <- factor(table1$What.is.your.preferred.gender.pronoun.,levels=c("she/her","he/him","doesn't matter","NA"), labels=c('Female','Male','Declined to state'))
table1$gender <- factor(table1$What.is.your.preferred.gender.pronoun.,levels=c("she/her","he/him","doesn't matter","NA"), labels=c('Female','Male','Declined to state','NA'))
barplot(sum(table1$gender=='Female') )
length(skill_name)
sum(as.numeric(table1$gender=='Female'))
table1$gender=='Female')
table1$gender=='Female'
sum(table1$gender=='Female',na.rm = T)
barplot(sum(table1$gender=='Female', na.rm = T) )
table1$gender <- factor(table1$What.is.your.preferred.gender.pronoun.,levels=c("she/her","he/him","doesn't matter"), labels=c('Female','Male','Declined to state'))
table1$gender[table1$gender=='NA', ] <- 'Declined to state'
table1$gender=='NA'
table1$gender[is.na(table1$gender), ] <- 'Declined to state'
is.na(table1$gender)
table1$gender[is.na(table1$gender), ] <- 'Declined to state'
table1$gender[is.na(table1$gender), ]
table1$gender[is.na(table1$gender)] <- 'Declined to state'
barplot(sum(table1$gender=='Female'), sum(table1$gender=='Male', sum(table1$gender=='Male', na.rm = T))
barplot(table1$R)
table1$R
barplot(sum(table1[,39:58])
barplot(sum(table1[,39:58]))
barplot(sum(table1[,39:58]))
barplot(colSum(table1[,39:58]))
barplot(colsSum(table1[,39:58]))
barplot(colSums(table1[,39:58]))
barplot(sort(colSums(table1[,39:58])))
barplot(sort(colSums(table1[,39:58]),-1))
barplot(sort(colSums(table1[,39:58]),reverse = T))
barplot(sort(colSums(table1[,39:58]),decreasing))
barplot(sort(colSums(table1[,39:58]),decreasing= T))
barplot(sort(colSums(table1[,39:58]),decreasing=T), main = '',xaxt="n")
barplot(sort(colSums(table1[,39:58]),decreasing=T), main = '',)
barplot(sort(colSums(table1[,39:58]),decreasing=T), main = '', xlas = 2)
barplot(sort(colSums(table1[,39:58]),decreasing=T), main = '', las = 2)
barplot(sort(colSums(table1[,39:58]),decreasing=T), main = 'Number of people Data Skills', las = 2, xlab = 'Programming Skills', ylab = 'Number of people')
tables$num_tools <- rowSums(table1[,39:58])
table1$num_tools <- rowSums(table1[,39:58])
library(dummies)
install.packages("dummies")
library(dummies)
dummy(tables1$Program)
dummy(table1$Program)
dummy(table1$Program, names= F)
factor(table1$What.is.your.preferred.gender.pronoun.,levels=c("she/her","he/him","doesn't matter"), labels=c('Female','Male','Declined to state'))
table1$gender <- factor(table1$What.is.your.preferred.gender.pronoun.,levels=c("she/her","he/him","doesn't matter"), labels=c(0,1,2))
View(table1)
table1$gender[is.na(table1$gender)] <- 2
factor(tables1$Program)
factor(table1$Program)
table1$Program == c('MSDS', 'Ms in ds')
sum(table1$Program == c('MSDS', 'Ms in ds'))
table1$Program == 'Ms in ds'
table1$Program[table1$Program == 'MSDS'] = 'IDSE (master)'
factor(table1$Program)
table1$Program[table1$Program == 'Ms in ds'] = 'IDSE (master)'
table1$Program[table1$Program == 'MSDS'] = 'IDSE (master)'
factor(table1$Program)
table1$Program <- factor(table1$Program)
pieplot(table1$Program)
pie(table1$Program)
table1$Program
a <- table(table1$Program)
pie(a)
pie(program)
program <- table(table1$Program)
pie(program)
pie(program, main = 'Program Decomposition')
rowSums(table1[, 39:58])
table1$conf_r <- factor(table1$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'), labels=c(0,1,2,3))
table1$conf_r
corr(table1$conf_r, rowSums(table1[, 39:58]))
cor(table1$conf_r, rowSums(table1[, 39:58]))
rowSums(table1[, 39:58])
cor(as.numeric(table1$conf_r), rowSums(table1[, 39:58]))
cor(as.numeric(table1$conf_r), rowSums(table1[tables1$R==1, 39:58]))
cor(as.numeric(table1$conf_r), rowSums(table1[table1$R==1, 39:58]))
table1$R==1
table1[table1$R==1, 39:58]
rowSums(table1[table1$R==1, 39:58])
groupR <- table1[table1$R==1, ]
cor(as.numeric(table1$conf_r), rowSums(grouR[,39:58]))
cor(as.numeric(table1$conf_r), rowSums(groupR[,39:58]))
groupR[,39:58]
table1[table1$R==1, ]
groupR <- data.frame(table1[table1$R==1, ])
groupR
rowSums(groupR[,39:58])
cor(as.numeric(table1$conf_r), as.numeric(rowSums(groupR[,39:58])))
as.numeric(rowSums(groupR[,39:58]))
groupR$conf_r <- factor(table1$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'), labels=c(0,1,2,3))
groupR$conf_r <- factor(groupR$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'), labels=c(0,1,2,3))
cor(as.numeric(groupR$conf_r), as.numeric(rowSums(groupR[,39:58])))
table1$conf_r <- factor(table1$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'), labels=c(0,1,2,3))
barplot(sum(table1$gender=='Female'), sum(table1$gender=='Male', sum(table1$gender=='Male', na.rm = T))
barplot(sort(colSums(table1[,39:58]),decreasing=T), main = 'Number of people Data Skills', las = 2, xlab = 'Programming Skills', ylab = 'Number of people')
table1$gender <- factor(table1$What.is.your.preferred.gender.pronoun.,levels=c("she/her","he/him","doesn't matter"), labels=c(0,1,2))
table1$gender[is.na(table1$gender)] <- 2
# plot 1: num. of people vs. skills
barplot(sort(colSums(table1[,39:58]),decreasing=T), main = 'Number of people Data Skills', las = 2, xlab = 'Programming Skills', ylab = 'Number of people')
pie(groupR$conf_r)
groupR$conf_r <- factor(groupR$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'), labels=c(0,1,2,3))
pie(groupR$conf_r)
table1$conf_r <- factor(table1$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'), labels=c(1,2,3,4))
groupR <- data.frame(table1[table1$R==1, ])
groupR$conf_r <- factor(groupR$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'), labels=c(1,2,3,4))
pie(groupR$conf_r)
confidencer <- table(groupR$conf_r)
pie(groupR$conf_r)
groupR$conf_r
pie(groupR$conf_r)
pie(confidencer)
groupR$conf_r <- factor(groupR$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'))
confidencer <- table(groupR$conf_r)
pie(confidencer)
confidencer <- table(groupR$conf_r, main = 'Confidence level for R users')
pie(confidencer, main = 'Confidence level for R users')
barplot(sort(colSums(table1[,39:58]),decreasing=T), main = 'Number of people Data Skills', las = 2, xlab = 'Programming Skills', ylab = 'Number of people')
# Plot 2: program
table1$Program[table1$Program == 'Ms in ds'] = 'IDSE (master)'
table1$Program[table1$Program == 'MSDS'] = 'IDSE (master)'
program <- table(table1$Program)
pie(program, main = 'Program Decomposition')
table1$conf_r <- factor(table1$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'), labels=c(1,2,3,4))
groupR <- data.frame(table1[table1$R==1, ])
groupR$conf_r <- factor(groupR$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'))
confidencer <- table(groupR$conf_r)
pie(confidencer, main = 'Confidence level for R users')
barplot(sum(table1$gender=='Female'), sum(table1$gender=='Male', sum(table1$gender=='Male', na.rm = T))
barplot(sum(table1$gender=='Female'), sum(table1$gender=='Male', sum(table1$gender=='Male', na.rm = T)))
length(skill_name)
barplot(sum(table1$gender=='Female'), sum(table1$gender=='Male', sum(table1$gender=='Male', na.rm = T)))
cor(as.numeric(groupR$conf_r), as.numeric(rowSums(groupR[,39:58])))
