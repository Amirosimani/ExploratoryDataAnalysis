groupR$conf_r <- factor(groupR$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'), labels=c(1,2,3,4))
pie(groupR$conf_r)
confidencer <- table(groupR$conf_r)
pie(groupR$conf_r)
groupR$conf_r
pie(groupR$conf_r)
pie(confidencer)
groupR$conf_r <- factor(groupR$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'))
confidencer <- table(groupR$conf_r)
pie(confidencer)
confidencer <- table(groupR$conf_r, main = 'Confidence level for R users')
pie(confidencer, main = 'Confidence level for R users')
barplot(sort(colSums(table1[,39:58]),decreasing=T), main = 'Number of people Data Skills', las = 2, xlab = 'Programming Skills', ylab = 'Number of people')
# Plot 2: program
table1$Program[table1$Program == 'Ms in ds'] = 'IDSE (master)'
table1$Program[table1$Program == 'MSDS'] = 'IDSE (master)'
program <- table(table1$Program)
pie(program, main = 'Program Decomposition')
table1$conf_r <- factor(table1$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'), labels=c(1,2,3,4))
groupR <- data.frame(table1[table1$R==1, ])
groupR$conf_r <- factor(groupR$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'))
confidencer <- table(groupR$conf_r)
pie(confidencer, main = 'Confidence level for R users')
barplot(sum(table1$gender=='Female'), sum(table1$gender=='Male', sum(table1$gender=='Male', na.rm = T))
barplot(sum(table1$gender=='Female'), sum(table1$gender=='Male', sum(table1$gender=='Male', na.rm = T)))
length(skill_name)
barplot(sum(table1$gender=='Female'), sum(table1$gender=='Male', sum(table1$gender=='Male', na.rm = T)))
cor(as.numeric(groupR$conf_r), as.numeric(rowSums(groupR[,39:58])))
setwd("~/GitHub/ExploratoryDataAnalysis")
require(xlsx)
library(ggplot2)
raw_data <- read.xlsx("Survey.xlsx", sheetName = "Form Responses 1")
# Get the skills for each samples.
skill_list <- strsplit(as.character(raw_data$Experiences.with.tools), ", ")
# Create a list for all skill names
skill_name <- vector(mode="character", length=0)
for (sample_index in 1:nrow(raw_data)) {
for (skill in skill_list[[sample_index]]) {
# append the names, create a new column if it is a new skill
if (!is.element(skill, skill_name)) {
skill_name = append(skill_name,skill)
raw_data[,skill] = 0
}
raw_data[sample_index,skill] = 1
}
}
View(raw_data)
raw_data <- read.xlsx("Survey.xlsx", sheetName = "Form Responses 1")
dataset$gender <- factor(raw_data$What.is.your.preferred.gender.pronoun.)
?data.frame
a<-data.frame()
dataset <- data.frame(stringsAsFactors = TRUE)
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.="he/him"] = "Male"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.="she/her"] = "Female"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.="doesn't matter"] = "Declined to state"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.="NA"] = "Declined to state"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="he/him"] = "Male"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="she/her"] = "Female"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="doesn't matter"] = "Declined to state"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="NA"] = "Declined to state"
dataset$gender = "Male"
dataset <- data.frame(c(dim(raw_data)[1]),stringsAsFactors = TRUE)
dataset <- data.frame(c(dim(raw_data)[1],0),stringsAsFactors = TRUE)
dim(raw_data)[1]
dataset <- data.frame(c(dim(raw_data)[1],1),stringsAsFactors = TRUE)
dataset <- data.frame(stringsAsFactors = TRUE)
dataset <- raw_data
# Gender
dataset$gender = "Male"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="he/him"] = "Male"
# Gender
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="he/him"] = "Male"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="she/her"] = "Female"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="doesn't matter"] = "Declined to state"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="NA"] = "Declined to state"
View(dataset)
class(dataset$gender)
dataset$gender <- factor(dataset$gender)
class(dataset$gender)
skill_list <- strsplit(as.character(raw_data$Experiences.with.tools), ", ")
# Create a list for all skill names
skill_name <- vector(mode="character", length=0)
# Create dummies for skills, loop through samples and skills
for (sample_index in 1:nrow(raw_data)) {
for (skill in skill_list[[sample_index]]) {
# append the names, create a new column if it is a new skill
if (!is.element(skill, skill_name)) {
skill_name = append(skill_name,skill)
dataset[,skill] = 0
}
dataset[sample_index,skill] = 1
}
}
View(dataset)
dataset$Program[dataset$Program == 'Ms in ds'] = 'IDSE (master)'
dataset$Program[dataset$Program == 'MSDS'] = 'IDSE (master)'
dataset$Program[dataset$Program == 'applied Math'] = 'Other masters'
dataset$Program[dataset$Program == 'PhD Biomedical Informatics'] = 'Ph.D.'
dataset$Program<- factor(dataset$Program)
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="he/him"] = "Male"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="she/her"] = "Female"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="doesn't matter"] = "Declined to state"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="NA"] = "Declined to state"
dataset$gender <- factor(dataset$gender)
## 2.Program
dataset$Program[dataset$program == 'Ms in ds'] = 'IDSE (master)'
dataset$Program[dataset$program == 'MSDS'] = 'IDSE (master)'
dataset$Program[dataset$program == 'applied Math'] = 'Other masters'
dataset$Program[dataset$program == 'PhD Biomedical Informatics'] = 'Ph.D.'
dataset$Program<- factor(dataset$program)
## 3.skill Dummies
setwd("~/GitHub/ExploratoryDataAnalysis")
require(xlsx)
library(ggplot2)
library(dummies)
# import raw data
raw_data <- read.xlsx("Survey.xlsx", sheetName = "Form Responses 1")
# This is the dataset we use in the following
dataset <- raw_data
## 1.Gender
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="he/him"] = "Male"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="she/her"] = "Female"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="doesn't matter"] = "Declined to state"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="NA"] = "Declined to state"
dataset$gender <- factor(dataset$gender)
## 2.Program
dataset$Program[dataset$program == 'Ms in ds'] = 'IDSE (master)'
dataset$Program[dataset$program == 'MSDS'] = 'IDSE (master)'
dataset$Program[dataset$program == 'applied Math'] = 'Other masters'
dataset$Program[dataset$program == 'PhD Biomedical Informatics'] = 'Ph.D.'
dataset$Program<- factor(dataset$program)
raw_data <- read.xlsx("Survey.xlsx", sheetName = "Form Responses 1")
# This is the dataset we use in the following
dataset <- raw_data
## 1.Gender
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="he/him"] = "Male"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="she/her"] = "Female"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="doesn't matter"] = "Declined to state"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="NA"] = "Declined to state"
dataset$gender <- factor(dataset$gender)
## 2.Program
dataset$program[dataset$program == 'Ms in ds'] = 'IDSE (master)'
dataset$program[dataset$program == 'MSDS'] = 'IDSE (master)'
dataset$program[dataset$program == 'applied Math'] = 'Other masters'
dataset$program[dataset$program == 'PhD Biomedical Informatics'] = 'Ph.D.'
dataset$program<- factor(dataset$program)
## 3.skill Dummies
# Get the skills for each samples.
pie(dataset$gender)
dataset$gender <- table(dataset$gender)
pie(dataset$gender)
dataset$gender <- factor(dataset$gender)
pie(dataset$gender)
setwd("~/GitHub/ExploratoryDataAnalysis")
require(xlsx)
library(ggplot2)
library(dummies)
# import raw data
raw_data <- read.xlsx("Survey.xlsx", sheetName = "Form Responses 1")
# This is the dataset we use in the following
dataset <- raw_data
## 1.Gender
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="he/him"] = "Male"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="she/her"] = "Female"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="doesn't matter"] = "Declined to state"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="NA"] = "Declined to state"
dataset$gender <- factor(dataset$gender)
## 2.Program
dataset$program[dataset$Program == 'Ms in ds'] = 'IDSE (master)'
dataset$program[dataset$Program == 'MSDS'] = 'IDSE (master)'
dataset$program[dataset$Program == 'applied Math'] = 'Other masters'
dataset$program[dataset$Program == 'PhD Biomedical Informatics'] = 'Ph.D.'
dataset$program<- factor(dataset$program)
## 3.Waitlist
dataset$waitlist = factor(raw_data$Are.you.on.the.waiting.list.)
# import raw data
raw_data <- read.xlsx("Survey.xlsx", sheetName = "Form Responses 1")
# This is the dataset we use in the following
dataset <- raw_data
## 1.Gender
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="he/him"] = "Male"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="she/her"] = "Female"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="doesn't matter"] = "Declined to state"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="NA"] = "Declined to state"
dataset$gender <- factor(dataset$gender)
## 2.Program
dataset$program[raw_data$Program == 'Ms in ds'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'MSDS'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'applied Math'] = 'Other masters'
dataset$program[raw_data$Program == 'PhD Biomedical Informatics'] = 'Ph.D.'
dataset$program<- factor(raw_data$program)
## 3.Waitlist
dataset$waitlist = factor(raw_data$Are.you.on.the.waiting.list.)
## 4.skill Dummies
# Get the skills for each samples.
skill_list <- strsplit(as.character(raw_data$Experiences.with.tools), ", ")
# Create a list for all skill names
skill_name <- vector(mode="character", length=0)
# Create dummies for skills, loop through samples and skills
for (sample_index in 1:nrow(raw_data)) {
for (skill in skill_list[[sample_index]]) {
# append the names, create a new column if it is a new skill
if (!is.element(skill, skill_name)) {
skill_name = append(skill_name,skill)
dataset[,skill] = 0
}
dataset[sample_index,skill] = 1
}
}
## 3.Program
# plot 1: num. of people vs. skills
View(dataset)
dataset$program = raw_data$Program
dataset$program[raw_data$Program == 'Ms in ds'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'MSDS'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'applied Math'] = 'Other masters'
dataset$program[raw_data$Program == 'PhD Biomedical Informatics'] = 'Ph.D.'
dataset$program <- factor(raw_data$program)
dataset$program = raw_data$Program
dataset$program[raw_data$Program == 'Ms in ds'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'MSDS'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'applied Math'] = 'Other masters'
dataset$program[raw_data$Program == 'PhD Biomedical Informatics'] = 'Ph.D.'
dataset$program <- factor(raw_data$program)
dataset$program = raw_data$Program
dataset$program <- raw_data$Program
View(dataset)
dataset$program[raw_data$Program == 'Ms in ds'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'MSDS'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'applied Math'] = 'Other masters'
dataset$program[raw_data$Program == 'PhD Biomedical Informatics'] = 'Ph.D.'
dataset$program <- factor(raw_data$program)
dataset$program <- raw_data$Program
dataset$program[raw_data$Program == 'Ms in ds'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'MSDS'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'applied Math'] = 'Other masters'
dataset$program[raw_data$Program == 'PhD Biomedical Informatics'] = 'Ph.D.'
dataset$program <- factor(dataset$program)
## 3.Waitlist
dataset$waitlist = factor(raw_data$Are.you.on.the.waiting.list.)
## 4.skill Dummies
# Get the skills for each samples.
skill_list <- strsplit(as.character(raw_data$Experiences.with.tools), ", ")
# Create a list for all skill names
skill_name <- vector(mode="character", length=0)
# Create dummies for skills, loop through samples and skills
for (sample_index in 1:nrow(raw_data)) {
for (skill in skill_list[[sample_index]]) {
# append the names, create a new column if it is a new skill
if (!is.element(skill, skill_name)) {
skill_name = append(skill_name,skill)
dataset[,skill] = 0
}
dataset[sample_index,skill] = 1
}
}
## 3.Program
dataset$conf_r <- factor(dataset$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
setwd("~/GitHub/ExploratoryDataAnalysis")
require(xlsx)
library(ggplot2)
library(dummies)
# import raw data
raw_data <- read.xlsx("Survey.xlsx", sheetName = "Form Responses 1")
# This is the dataset we use in the following
dataset <- raw_data
## 1.Gender
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="he/him"] = "Male"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="she/her"] = "Female"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="doesn't matter"] = "Declined to state"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="NA"] = "Declined to state"
dataset$gender <- factor(dataset$gender)
## 2.Program
dataset$program <- raw_data$Program
dataset$program[raw_data$Program == 'Ms in ds'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'MSDS'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'applied Math'] = 'Other masters'
dataset$program[raw_data$Program == 'PhD Biomedical Informatics'] = 'Ph.D.'
dataset$program <- factor(dataset$program)
## 3.Waitlist
dataset$waitlist = factor(raw_data$Are.you.on.the.waiting.list.)
## 4.skill Dummies
# Get the skills for each samples.
skill_list <- strsplit(as.character(raw_data$Experiences.with.tools), ", ")
# Create a list for all skill names
skill_name <- vector(mode="character", length=0)
# Create dummies for skills, loop through samples and skills
for (sample_index in 1:nrow(raw_data)) {
for (skill in skill_list[[sample_index]]) {
# append the names, create a new column if it is a new skill
if (!is.element(skill, skill_name)) {
skill_name = append(skill_name,skill)
dataset[,skill] = 0
}
dataset[sample_index,skill] = 1
}
}
## 5 text editor
dataset$text_editor <- raw_data$What.code.text.editor.do.you.use.most.
View(dataset)
View(dataset)
dataset <- dataset[,-1:38]
dataset <- dataset[,-(1:38)]
View(dataset)
setwd("~/GitHub/ExploratoryDataAnalysis")
require(xlsx)
library(ggplot2)
library(dummies)
# import raw data
raw_data <- read.xlsx("Survey.xlsx", sheetName = "Form Responses 1")
# This is the dataset we use in the following
dataset <- raw_data
## 1.Gender
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="he/him"] = "Male"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="she/her"] = "Female"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="NA"] = "Declined to state"
dataset$gender <- factor(dataset$gender)
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="doesn't matter"] = "Declined to state"
## 2.Program
dataset$program <- raw_data$Program
dataset$program[raw_data$Program == 'Ms in ds'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'applied Math'] = 'Other masters'
dataset$program[raw_data$Program == 'PhD Biomedical Informatics'] = 'Ph.D.'
dataset$program[raw_data$Program == 'MSDS'] = 'IDSE (master)'
dataset$program <- factor(dataset$program)
## 3.Waitlist
dataset$waitlist = factor(raw_data$Are.you.on.the.waiting.list.)
## 4.skill Dummies
# Get the skills for each samples.
skill_list <- strsplit(as.character(raw_data$Experiences.with.tools), ", ")
# Create a list for all skill names
skill_name <- vector(mode="character", length=0)
# Create dummies for skills, loop through samples and skills
for (sample_index in 1:nrow(raw_data)) {
for (skill in skill_list[[sample_index]]) {
# append the names, create a new column if it is a new skill
if (!is.element(skill, skill_name)) {
skill_name = append(skill_name,skill)
dataset[,skill] = 0
}
dataset[sample_index,skill] = 1
}
}
## 5 text editor
dataset$text_editor <- raw_data$What.code.text.editor.do.you.use.most.
## 6. Confidence
dataset$conf_r_manipulation <- factor(dataset$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
dataset$conf_r_graphic <- factor(dataset$Programming.and.Analytical.Experiences..R..graphic.basics..base..lattice..grid.etc....  ,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
dataset$conf_r_multivariate <- factor(dataset$Programming.and.Analytical.Experiences..R..advanced..multivariate.data.analysis..e.g..spatiotemporal.data..visualization.and.modeling..    ,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
dataset$conf_r_markdown <- factor(dataset$Programming.and.Analytical.Experiences..Reproducible.documentation.with.R..e.g..R.Markdown..  ,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
dataset$conf_github <- factor(dataset$Programming.and.Analytical.Experiences..Github.,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
dataset$conf_matlab <- factor(dataset$Programming.and.Analytical.Experiences..Matlab..data.manipulation..analysis..visualization.and.modeling.  ,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
## Drop old columns
dataset <- dataset[,-(1:38)]
# plot 1: num. of people vs. skills
barplot(sort(colSums(dataset[,39:58]),decreasing=T), main = 'Number of people Data Skills', las = 2, xlab = 'Programming Skills', ylab = 'Number of people')
View(dataset)
subgroup_R <- dataset[,dataset$R==1]
subgroup_R <- dataset[dataset$R==1,]
subgroup_R <- dataset[dataset$R==1,]
subgroup_IDSE <- dataset[dataset$program=='IDSE (master)',]
subgroup_nonIDSE <- dataset[dataset$program!='IDSE (master)',]
subgroup_male <- dataset[dataset$gender=='Male',]
subgroup_female <- dataset[dataset$gender=='Female',]
View(dataset)
View(dataset)
raw_data <- read.xlsx("Survey.xlsx", sheetName = "Form Responses 1")
# This is the dataset we use in the following
dataset <- raw_data
raw_data$What.is.your.preferred.gender.pronoun.=="doesn't matter"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="doesn't matter"] = "Declined to state"
View(dataset)
raw_data <- read.xlsx("Survey.xlsx", sheetName = "Form Responses 1")
# This is the dataset we use in the following
dataset <- raw_data
###########################################################################################
## 1.Gender
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="he/him"] = "Male"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="she/her"] = "Female"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="doesn't matter"] = "Declined to state"
dataset$gender[is.na(raw_data$What.is.your.preferred.gender.pronoun.)=TRUE] = "Declined to state"
dataset$gender <- factor(dataset$gender)
## 2.Program
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="he/him"] = "Male"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="she/her"] = "Female"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="doesn't matter"] = "Declined to state"
dataset$gender[is.na(raw_data$What.is.your.preferred.gender.pronoun.)] = "Declined to state"
dataset$gender <- factor(dataset$gender)
## 2.Program
dataset$program <- raw_data$Program
dataset$program[raw_data$Program == 'Ms in ds'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'MSDS'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'Applied Math'] = 'Other masters'
dataset$program[raw_data$Program == 'PhD Biomedical Informatics'] = 'Ph.D.'
dataset$program[raw_data$Program == 'QMSS'] = 'QMSS (master)'
dataset$program <- factor(dataset$program)
## 3.Waitlist
dataset$waitlist = factor(raw_data$Are.you.on.the.waiting.list.)
## 4.skill Dummies
# Get the skills for each samples.
skill_list <- strsplit(as.character(raw_data$Experiences.with.tools), ", ")
# Create a list for all skill names
skill_name <- vector(mode="character", length=0)
# Create dummies for skills, loop through samples and skills
for (sample_index in 1:nrow(raw_data)) {
for (skill in skill_list[[sample_index]]) {
# append the names, create a new column if it is a new skill
if (!is.element(skill, skill_name)) {
skill_name = append(skill_name,skill)
dataset[,skill] = 0
}
dataset[sample_index,skill] = 1
}
}
## 5 text editor
dataset$text_editor <- raw_data$What.code.text.editor.do.you.use.most.
## 6. Confidence
dataset$conf_r_manipulation <- factor(dataset$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
dataset$conf_r_graphic <- factor(dataset$Programming.and.Analytical.Experiences..R..graphic.basics..base..lattice..grid.etc....  ,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
dataset$conf_r_multivariate <- factor(dataset$Programming.and.Analytical.Experiences..R..advanced..multivariate.data.analysis..e.g..spatiotemporal.data..visualization.and.modeling..    ,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
dataset$conf_r_markdown <- factor(dataset$Programming.and.Analytical.Experiences..Reproducible.documentation.with.R..e.g..R.Markdown..  ,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
dataset$conf_github <- factor(dataset$Programming.and.Analytical.Experiences..Github.,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
dataset$conf_matlab <- factor(dataset$Programming.and.Analytical.Experiences..Matlab..data.manipulation..analysis..visualization.and.modeling.  ,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
## Drop old columns
dataset <- dataset[,-(1:38)]
##################################################################################################
## Making subgroups
subgroup_R <- dataset[dataset$R==1,]
subgroup_IDSE <- dataset[dataset$program=='IDSE (master)',]
subgroup_nonIDSE <- dataset[dataset$program!='IDSE (master)',]
subgroup_male <- dataset[dataset$gender=='Male',]
subgroup_female <- dataset[dataset$gender=='Female',]
View(dataset)
pie(program)
pie(dataset$program)
pie(dataset$program)
pie(table(dataset$program)
)
dataset$program <- raw_data$Program
dataset$program[raw_data$Program == 'Ms in ds'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'MSDS'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'Data Science'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'Applied Math'] = 'Other masters'
dataset$program[raw_data$Program == 'PhD Biomedical Informatics'] = 'Ph.D.'
dataset$program[raw_data$Program == 'QMSS'] = 'QMSS (master)'
dataset$program <- factor(dataset$program)
pie(table(dataset$program))
subgroup_IDSE <- dataset[dataset$program==c('IDSE (master)', 'Data Science Certification'),]
subgroup_IDSE <- dataset[dataset$program==c('IDSE (master)', 'Data Science Certification'),]
View(subgroup_IDSE)
subgroup_IDSE <- dataset[dataset$program==c('IDSE (master)', 'Data Science Certification'),]
subgroup_nonIDSE <- dataset[dataset$program!=c('IDSE (master)', 'Data Science Certification'),]
View(subgroup_nonIDSE)
raw_data <- read.xlsx("Survey.xlsx", sheetName = "Form Responses 1")
# This is the dataset we use in the following
dataset <- raw_data
###########################################################################################
## 1.Gender
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="he/him"] = "Male"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="she/her"] = "Female"
dataset$gender[raw_data$What.is.your.preferred.gender.pronoun.=="doesn't matter"] = "Declined to state"
dataset$gender[is.na(raw_data$What.is.your.preferred.gender.pronoun.)] = "Declined to state"
dataset$gender <- factor(dataset$gender)
## 2.Program
dataset$program <- raw_data$Program
dataset$program[raw_data$Program == 'Ms in ds'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'MSDS'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'Data Science'] = 'IDSE (master)'
dataset$program[raw_data$Program == 'Applied Math'] = 'Other masters'
dataset$program[raw_data$Program == 'PhD Biomedical Informatics'] = 'Ph.D.'
dataset$program[raw_data$Program == 'QMSS'] = 'QMSS (master)'
dataset$program <- factor(dataset$program)
## 3.Waitlist
dataset$waitlist = factor(raw_data$Are.you.on.the.waiting.list.)
## 4.skill Dummies
# Get the skills for each samples.
skill_list <- strsplit(as.character(raw_data$Experiences.with.tools), ", ")
# Create a list for all skill names
skill_name <- vector(mode="character", length=0)
# Create dummies for skills, loop through samples and skills
for (sample_index in 1:nrow(raw_data)) {
for (skill in skill_list[[sample_index]]) {
# append the names, create a new column if it is a new skill
if (!is.element(skill, skill_name)) {
skill_name = append(skill_name,skill)
dataset[,skill] = 0
}
dataset[sample_index,skill] = 1
}
}
## 5 text editor
dataset$text_editor <- raw_data$What.code.text.editor.do.you.use.most.
## 6. Confidence
dataset$conf_r_manipulation <- factor(dataset$Programming.and.Analytical.Experiences..R..data.manipulation.and.modeling.,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
dataset$conf_r_graphic <- factor(dataset$Programming.and.Analytical.Experiences..R..graphic.basics..base..lattice..grid.etc....  ,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
dataset$conf_r_multivariate <- factor(dataset$Programming.and.Analytical.Experiences..R..advanced..multivariate.data.analysis..e.g..spatiotemporal.data..visualization.and.modeling..    ,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
dataset$conf_r_markdown <- factor(dataset$Programming.and.Analytical.Experiences..Reproducible.documentation.with.R..e.g..R.Markdown..  ,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
dataset$conf_github <- factor(dataset$Programming.and.Analytical.Experiences..Github.,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
dataset$conf_matlab <- factor(dataset$Programming.and.Analytical.Experiences..Matlab..data.manipulation..analysis..visualization.and.modeling.  ,levels=c('None','A little', 'Confident', 'Expert'), ordered= TRUE)
## Drop old columns
dataset <- dataset[,-(1:38)]
##################################################################################################
## Making subgroups
subgroup_R <- dataset[dataset$R==1,]
subgroup_IDSE <- dataset[dataset$program==c('IDSE (master)', 'Data Science Certification'),]
subgroup_nonIDSE <- dataset[dataset$program!=c('IDSE (master)', 'Data Science Certification'),]
subgroup_male <- dataset[dataset$gender=='Male',]
subgroup_female <- dataset[dataset$gender=='Female',]
View(subgroup_IDSE)
View(subgroup_R)
View(subgroup_female)
View(dataset)
